#!/bin/bash

# newrm - A replacement for existing rm command.
#   This script provides a rudimentary unremove capability by creating and
#   and utilizing a new directory within the user's home directory. It can handle
#   directories of content as well as individual files. If the user specifies -f flag,
#   files are removed and NOT archived.

# Big important warning: You'll want a cron job or something similar to keep
# the trash directories tamed. Otherwise, nothing will ever actually be deleted from system
# and you'll run out of disk space !!

archivedir="$HOME/.deleted-files"
realrm="$(which rm)"
copy="$(which cp) -R"

if [ $# -eq 0 ]; then
  exec $realrm
fi

# Parse all options looking for '-f'
flags=""
while getopts "dfiPRrvw" opt; do
  case $opt in
    f ) exec $realrm "$@"           ;;
    * ) flags="$flags -$opt"        ;;
  esac
done

shift $(( $OPTIND - 1 ))

# BEGIN MAIN SCRIPT
# =======================

# Make sure that $archivedir exists
if [ ! -d $archivedir ]; then
  if [ ! -w $HOME ]; then
    echo "$0 failed: can't create $archivedir in $HOME" >&2
    exit 1
  fi
  mkdir $archivedir
  chmod 700 $archivedir
fi

for arg; do
  newname="$archivedir/$(date "+%S.%M.%H.%d.%m").$(basename "$arg")"
  if [ -f "$arg" -o -d "$arg" ]; then
    $copy "$arg" "$newname"
  fi
done

exec $realrm $flags "$@"

